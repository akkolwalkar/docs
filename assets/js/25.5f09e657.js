(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{225:function(e,t,s){"use strict";s.r(t);var n=s(0),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"joining-the-testnet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#joining-the-testnet"}},[e._v("#")]),e._v(" Joining the Testnet")]),e._v(" "),s("p",[e._v("This guide will cover setting up your nodes for The Quest, a multi-round staking\ncompetition (aka incentivized testnet) on the Oasis Network. It assumes some basic\nknowledge on the use of command line tools.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("If you joined the Testnet prior to 2020/01/15 and you plan to use the same entity\nfor The Quest, use the following steps to upgrade:")]),e._v(" "),s("ol",[s("li",[s("RouterLink",{attrs:{to:"/operators/maintenance/wiping-node-state.html##state-wipe-and-keep-node-identity"}},[e._v("Stop your node and wipe state while keeping your node's identity")]),e._v(".")],1),e._v(" "),s("li",[e._v("Download the "),s("RouterLink",{attrs:{to:"/operators/current-testnet-parameters.html"}},[e._v("current genesis file and "),s("code",[e._v("oasis-node")])]),e._v(" to your server.")],1),e._v(" "),s("li",[e._v("See the "),s("RouterLink",{attrs:{to:"/operators/current-testnet-parameters.html#2019-11-26-latest"}},[e._v("Deployment Change Log")]),e._v(" for a list of changes and ensure that you\nupdate your node's configuration.")],1),e._v(" "),s("li",[e._v("Start your node (you may need to "),s("a",{attrs:{href:"#check-that-your-node-is-synced"}},[e._v("wait for your node to sync")]),e._v(").")])])]),e._v(" "),s("h2",{attrs:{id:"prerequisites"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),s("p",[e._v("Before following this guide, make sure you've followed the "),s("RouterLink",{attrs:{to:"/operators/prerequisites.html"}},[e._v("Prerequisites\nGuide")]),e._v(" and understand how to use the "),s("code",[e._v("oasis-node")]),e._v(" binary.")],1),e._v(" "),s("h3",{attrs:{id:"systems"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#systems"}},[e._v("#")]),e._v(" Systems")]),e._v(" "),s("p",[e._v("This guide assumes that you have two different physical machines that you will\nuse for deployment. These machines are the following:")]),e._v(" "),s("ul",[s("li",[e._v("Your local system, henceforth called the "),s("code",[e._v("localhost")]),e._v(".")]),e._v(" "),s("li",[e._v("A remote system to run as an Oasis node, henceforth called the "),s("code",[e._v("server")]),e._v(".")])]),e._v(" "),s("p",[e._v("The reason for this is to ensure protection of the keys used to setup your\nnode. This guide does not include the use of HSMs, but they should be used in\nthe future.")]),e._v(" "),s("h2",{attrs:{id:"creating-your-entity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-your-entity"}},[e._v("#")]),e._v(" Creating Your Entity")]),e._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("Everything in this section should be done on the "),s("code",[e._v("localhost")]),e._v(" as there are\nsensitive items that will be created.")])]),e._v(" "),s("h3",{attrs:{id:"creating-a-working-directory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-working-directory"}},[e._v("#")]),e._v(" Creating a Working Directory")]),e._v(" "),s("p",[e._v("During this entity initialization process, we will create keys and other\nimportant artifacts that are necessary for the deployment of nodes on the\nnetwork. It is important that you save and protect the generated artifacts in\nthis directory if you intend to use them to register your entity and nodes.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("We will reference the working directory on "),s("code",[e._v("localhost")]),e._v(" as "),s("code",[e._v("/localhostdir")]),e._v("\nthroughout the documentation.")])]),e._v(" "),s("p",[e._v("Inside "),s("code",[e._v("/localhostdir")]),e._v(" you should create the following directories:")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("entity")]),e._v(": This will store your entity. The private contents in this directory\nare safest if used on a machine kept disconnected from the internet.")]),e._v(" "),s("p",[e._v("The directory's permissions should be "),s("code",[e._v("rwx------")])])]),e._v(" "),s("li",[s("p",[s("code",[e._v("node")]),e._v(': This will store a node we are calling "node". The name is not\nimportant. It simply represents one of your nodes. You can rename it to\nwhatever you wish. The private contents of this directory will be used on the\nnode itself.')]),e._v(" "),s("p",[e._v("You should initialize this information on a system with access to the entity's\nprivate key.")]),e._v(" "),s("p",[e._v("The directory permissions should be "),s("code",[e._v("rwx------")])])])]),e._v(" "),s("p",[e._v("To create the directory structure, use the following command:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" -m700 -p "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("entity,node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("h3",{attrs:{id:"copying-the-genesis-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#copying-the-genesis-file"}},[e._v("#")]),e._v(" Copying the Genesis File")]),e._v(" "),s("p",[e._v("The latest genesis file can be found in "),s("RouterLink",{attrs:{to:"/operators/current-testnet-parameters.html"}},[e._v("Current Testnet Parameters")]),e._v(".\nYou should download the latest "),s("code",[e._v("genesis.json")]),e._v(" file, copy it to the working\ndirectory and set the following environment variable pointing to its path:")],1),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("GENESIS_FILE_PATH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/localhostdir/genesis.json\n")])])]),s("p",[e._v("This will be needed later when generating transactions.")]),e._v(" "),s("h3",{attrs:{id:"initializing-an-entity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initializing-an-entity"}},[e._v("#")]),e._v(" Initializing an Entity")]),e._v(" "),s("p",[e._v("As described in the "),s("RouterLink",{attrs:{to:"/operators/architectural-overview.html#entities-and-key-management"}},[e._v("Architectural Overview")]),e._v(", an entity is\ncritical to operating nodes on the network as it controls the stake attached to\na given individual or organization on the network.\nIn the future, we will support using entity keys through HSMs to ensure that\nentity keys cannot be easily compromised.")],1),e._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("We strongly suggest that you do not use any entity that is generated with the\ncurrent process on the Mainnet.")]),e._v(" "),s("p",[e._v("During the Public Testnet and staking competition we would also suggest that\nyou generate the entity on a system that has no network connection to provide\nrudimentary protection for the entity key.\nHowever, it is up to you to determine your own security practices.")])]),e._v(" "),s("p",[e._v("To initialize an entity simply run the following from "),s("code",[e._v("/localhostdir/entity")]),e._v(":")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node registry entity init\n")])])]),s("p",[e._v("This will generate three files in "),s("code",[e._v("/localhostdir/entity")]),e._v(":")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("entity.pem")]),e._v(": The private key of the entity. "),s("strong",[e._v("NEVER SHARE THIS AS IT CAN BE\nUSED TO TRANSFER STAKE")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("entity.json")]),e._v(": The entity descriptor. This is the JSON of the unsigned\ninformation to be sent to the registry application on the network.")]),e._v(" "),s("li",[s("code",[e._v("entity_genesis.json")]),e._v(": This JSON object contains the entity descriptor that\nhas been signed with entity's private key, i.e. "),s("code",[e._v("entity.pem")]),e._v(".\nThis is meant to be shared for inclusion in the Genesis block.")])]),e._v(" "),s("h3",{attrs:{id:"initializing-a-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initializing-a-node"}},[e._v("#")]),e._v(" Initializing a Node")]),e._v(" "),s("p",[e._v("A node registers itself to the network when the node starts up. However, in\norder to validate itself, the entity signs a public key associated with the\nnode. This allows the node registration to happen without the uploading\nentity's private key to the internet.")]),e._v(" "),s("p",[e._v("To initialize a validator node, take note of the static IP of the\nserver where your node will run, and issue the following commands from the\n"),s("code",[e._v("/localhostdir/node")]),e._v(" directory:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("STATIC_IP")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("YOUR-STATIC-IP"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\noasis-node registry node init "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer.dir /localhostdir/entity "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --node.consensus_address "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$STATIC_IP")]),e._v(":26656 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --node.is_self_signed "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --node.role validator\n")])])]),s("p",[e._v("This command will create a validator node's identity so that it can be a\nself-signed node (this is what allows self-registration).")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("There are more options for node initialization that you can explore by running:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node registry node init --help\n")])])]),s("p",[e._v("The options shown above are just the minimum.")])]),e._v(" "),s("p",[e._v("The command will generate the following files:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("consensus.pem")]),e._v(": The node's consensus private key. "),s("strong",[e._v("DO NOT SHARE")])]),e._v(" "),s("li",[s("code",[e._v("consensus_pub.pem")]),e._v(": The node's consensus public key.")]),e._v(" "),s("li",[s("code",[e._v("identity.pem")]),e._v(": The node's identity private key. "),s("strong",[e._v("DO NOT SHARE")])]),e._v(" "),s("li",[s("code",[e._v("identity_pub.pem")]),e._v(": The node's identity public key.")]),e._v(" "),s("li",[s("code",[e._v("node_genesis.json")]),e._v(": The node's details if you wish to include this node in\nthe genesis file of the network.")]),e._v(" "),s("li",[s("code",[e._v("p2p.pem")]),e._v(": The node's private key for libp2p. "),s("strong",[e._v("DO NOT SHARE")])]),e._v(" "),s("li",[s("code",[e._v("p2p_pub.pem")]),e._v(": The node's public key for libp2p.")]),e._v(" "),s("li",[s("code",[e._v("tls_identity.pem")]),e._v(": The node's TLS private key for securing gRPC\nconnections. "),s("strong",[e._v("DO NOT SHARE")])]),e._v(" "),s("li",[s("code",[e._v("tls_identity_cert.pem")]),e._v(": The node's TLS certificate for securing gRPC\nconnections.")])]),e._v(" "),s("h4",{attrs:{id:"adding-the-node-to-the-entity-descriptor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adding-the-node-to-the-entity-descriptor"}},[e._v("#")]),e._v(" Adding the Node to the Entity Descriptor")]),e._v(" "),s("p",[e._v("Once the node has been initialized, we need to add it to the entity descriptor\nso that it can properly register itself when the node starts up.")]),e._v(" "),s("p",[e._v("Execute the following command in the "),s("code",[e._v("/localhostdir/node")]),e._v(" directory:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node registry entity update "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer.dir /localhostdir/entity "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --entity.node.descriptor node_genesis.json\n")])])]),s("p",[e._v("This will update the entity descriptor in "),s("code",[e._v("entity.json")]),e._v(" and subsequently the\n"),s("code",[e._v("entity_genesis.json")]),e._v(" file that contains the signed entity descriptor payload.")]),e._v(" "),s("h4",{attrs:{id:"initializing-additional-nodes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#initializing-additional-nodes"}},[e._v("#")]),e._v(" Initializing Additional Nodes")]),e._v(" "),s("p",[e._v("At the time of Public Testnet, the network will only have validators and no\nother committees (no compute, no key management, no storage, etc.).")]),e._v(" "),s("p",[e._v("At this time this documentation does not include instructions for configuring\nanything beyond a single validator.")]),e._v(" "),s("p",[e._v("If you'd like to create more validator nodes, you can simply repeat the process\nabove to initialize the artifacts for an additional node, just rename the\nthings pertaining to a particular node appropriately.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("Each node will require at least the network-defined minimum staking amount (at\nthis time, this is 100 tokens).")])]),e._v(" "),s("h2",{attrs:{id:"running-an-oasis-node-on-the-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#running-an-oasis-node-on-the-server"}},[e._v("#")]),e._v(" Running an Oasis Node on the "),s("code",[e._v("server")])]),e._v(" "),s("h3",{attrs:{id:"setting-up-the-oasis-node-s-working-directory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-the-oasis-node-s-working-directory"}},[e._v("#")]),e._v(" Setting up the Oasis Node's Working Directory")]),e._v(" "),s("p",[e._v("Before we run the node on the "),s("code",[e._v("server")]),e._v(" we need to ensure that we have a place\nto store necessary files for the node.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("We will reference the working directory on the "),s("code",[e._v("server")]),e._v(" as "),s("code",[e._v("/serverdir")]),e._v("\nthroughout the documentation.")])]),e._v(" "),s("h4",{attrs:{id:"setting-up-the-the-serverdir-directory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-the-the-serverdir-directory"}},[e._v("#")]),e._v(" Setting up the the "),s("code",[e._v("/serverdir")]),e._v(" Directory")]),e._v(" "),s("p",[e._v("In the "),s("code",[e._v("/serverdir")]),e._v(" directory we will create the following subdirectories:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("etc/")]),e._v(" - this is to store the configuration")]),e._v(" "),s("li",[s("code",[e._v("node/")]),e._v(" - this is to store the node's data")]),e._v(" "),s("li",[s("code",[e._v("node/entity/")]),e._v(" - this is to store the public components of the node's entity")])]),e._v(" "),s("p",[e._v("You can make this directory structure by executing the following command:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" -m700 -p /serverdir/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("etc,node,node/entity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("h4",{attrs:{id:"copying-the-node-artifacts-from-localhostdir"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#copying-the-node-artifacts-from-localhostdir"}},[e._v("#")]),e._v(" Copying the Node Artifacts from "),s("code",[e._v("/localhostdir")])]),e._v(" "),s("p",[e._v("In order for the node registration to work properly, as defined in\n"),s("code",[e._v("/localhostdir/entity.json")]),e._v(", you must copy the node's artifacts you generated\nin the "),s("a",{attrs:{href:"#initializing-a-node"}},[e._v("Initializing a Node")]),e._v(" section.\nTo do so, upload the following files from "),s("code",[e._v("/localhostdir/node")]),e._v(" to\n"),s("code",[e._v("/serverdir/node")]),e._v(" over a secure channel (e.g. SSH):")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("consensus.pem")])]),e._v(" "),s("li",[s("code",[e._v("consensus_pub.pem")])]),e._v(" "),s("li",[s("code",[e._v("identity.pem")])]),e._v(" "),s("li",[s("code",[e._v("identity_pub.pem")])]),e._v(" "),s("li",[s("code",[e._v("p2p.pem")])]),e._v(" "),s("li",[s("code",[e._v("p2p_pub.pem")])]),e._v(" "),s("li",[s("code",[e._v("tls_identity.pem")])]),e._v(" "),s("li",[s("code",[e._v("tls_identity_cert.pem")])])]),e._v(" "),s("p",[e._v("After copying, make sure that all these files have "),s("code",[e._v("0600")]),e._v(" permissions, i.e.\nonly their owner has "),s("code",[e._v("read")]),e._v(" and "),s("code",[e._v("write")]),e._v(" permissions.")]),e._v(" "),s("p",[e._v("To do so, run the following command:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" -R "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("600")]),e._v(" /serverdir/node/*.pem\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[e._v("IMPORTANT")]),e._v(" "),s("p",[e._v("You may have noticed that some of these files were listed as "),s("strong",[e._v("DO NOT SHARE")]),e._v("\nin the "),s("a",{attrs:{href:"#initializing-a-node"}},[e._v("Initializing a Node")]),e._v(" section.")]),e._v(" "),s("p",[e._v("In the future, these keys should be generated and referenced from an HSM.\nHowever, until HSM support is implemented, these keys should be kept as secure\nas possible on the "),s("code",[e._v("server")]),e._v(".")])]),e._v(" "),s("h4",{attrs:{id:"copying-the-public-entity-artifacts-from-localhostdir"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#copying-the-public-entity-artifacts-from-localhostdir"}},[e._v("#")]),e._v(" Copying the Public Entity Artifacts from "),s("code",[e._v("/localhostdir")])]),e._v(" "),s("p",[e._v("We will also need to have the public entity artifacts from the "),s("code",[e._v("/localhostdir")]),e._v("\npresent on the "),s("code",[e._v("server")]),e._v(".\nCopy the "),s("code",[e._v("/localhostdir/entity/entity.json")]),e._v(" file on "),s("code",[e._v("localhost")]),e._v(" to\n"),s("code",[e._v("/serverdir/node/entity/entity.json")]),e._v(" on the "),s("code",[e._v("server")]),e._v(".")]),e._v(" "),s("h4",{attrs:{id:"copying-the-genesis-file-to-the-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#copying-the-genesis-file-to-the-server"}},[e._v("#")]),e._v(" Copying the Genesis File to the server")]),e._v(" "),s("p",[e._v("The latest Genesis file can be found in the "),s("RouterLink",{attrs:{to:"/operators/current-testnet-parameters.html"}},[e._v("Current Testnet Parameters")]),e._v(".\nYou should download the latest "),s("code",[e._v("genesis.json")]),e._v(" file and copy it to\n"),s("code",[e._v("/serverdir/etc/genesis.json")]),e._v(" on the "),s("code",[e._v("server")]),e._v(".")],1),e._v(" "),s("h4",{attrs:{id:"configuring-the-oasis-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuring-the-oasis-node"}},[e._v("#")]),e._v(" Configuring the Oasis Node")]),e._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("If you deployed a node on the 2019-11-13 Public Testnet, the configuration has\nchanged. Please, update your configuration or your node will fail to connect.")])]),e._v(" "),s("p",[e._v("There are a variety of options available when running an Oasis node. The\nfollowing YAML file is a basic configuration for a validator node on the\nnetwork.")]),e._v(" "),s("p",[e._v("Before using this configuration you should collect the following information to\nreplace the "),s("code",{pre:!0},[e._v("{{ var_name }}")]),e._v(" variables present in the\nconfiguration file:")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",{pre:!0},[e._v("{{ external_address }}")]),e._v(": The external IP you used when\nregistering this node.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("If you are using a "),s("RouterLink",{attrs:{to:"/operators/sentry-node.html"}},[e._v("Sentry Node")]),e._v(", you should use the public IP of that\nmachine.")],1)])]),e._v(" "),s("li",[s("p",[s("code",{pre:!0},[e._v("{{ seed_node_address }}")]),e._v(":  The seed node address in the\nform "),s("code",[e._v("ID@IP:port")]),e._v(".")]),e._v(" "),s("p",[e._v("You can find the current Oasis Seed Node address in the "),s("RouterLink",{attrs:{to:"/operators/current-testnet-parameters.html"}},[e._v("Current Testnet\nParameters")]),e._v(".")],1)])]),e._v(" "),s("p",[e._v("To use this configuration, save it in the "),s("code",[e._v("/serverdir/etc/config.yml")]),e._v(" file and\npass it to the "),s("code",[e._v("oasis-node")]),e._v(" command as an argument to the "),s("code",[e._v("--config")]),e._v(" flag.")]),e._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("##")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Oasis Node Configuration")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# This file's contents are derived from the command line arguments found in the")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# root command of the oasis-node binary. For more information, execute:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#     oasis-node --help")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Settings on the command line that are separated by a dot all belong to the")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# same nested object. For example, "--foo.bar.baz hello" would translate to:')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#     foo:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#       bar:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#         baz: hello")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("##")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Set this to where you wish to store node data. The node's artifacts")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# should also be located in this directory.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("datadir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /serverdir/node\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Logging.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Per-module log levels are defined below. If you prefer just one unified log")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# level, you can use:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# log:")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#   level: debug")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("level")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Per-module log levels. Longest prefix match will be taken. Fallback to")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# "default", if no match.')]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" debug\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tendermint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" warn\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tendermint/context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" error\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" JSON\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# By default logs are output to stdout. If you would like to output logs to")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# a file, you can use:")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# file: /var/log/oasis-node.log")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Genesis.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("genesis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Path to the genesis file for the current version of the network.")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /serverdir/etc/genesis.json\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Worker configuration.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("worker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("registration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# In order for the node to register itself, the entity.json of the entity")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# used to provision the node must be available on the node.")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("entity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" /serverdir/node/entity/entity.json\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Consensus backend.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("consensus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Setting this to true will mean that the node you're deploying will attempt")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# to register as a validator.")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("validator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Tendermint backend configuration.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tendermint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("abci")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("prune")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# WARNING: Use this carefully. Pruning blockchain state is resource intensive.")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# However, running with pruning disabled means you will eventually fill all")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# storage on your node.")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# See https://github.com/oasislabs/oasis-core/issues/2432 for more details.")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# This configuration would cause your node to retain state from only the")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# latest 86400 blocks:")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# strategy: keep_n")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# num_kept: 86400")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("strategy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" none\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("core")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("listen_address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" tcp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//0.0.0.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("26656")]),e._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The external IP that is used when registering this node to the network.")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# NOTE: If you are using the Sentry node setup, this option should be")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# omitted.")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("external_address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" tcp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" external_address "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("26656")]),e._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("db")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("backend")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" badger\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("debug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("addr_book_lenient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("false")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# List of seed nodes to connect to.")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# NOTE: You can add additional seed nodes to this list if you want.")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("seed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{{ seed_node_address }}"')]),e._v("\n")])])]),s("h4",{attrs:{id:"ensuring-proper-permissions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ensuring-proper-permissions"}},[e._v("#")]),e._v(" Ensuring Proper Permissions")]),e._v(" "),s("p",[e._v("Only the owner of the process that runs the Oasis node should have access to\nthe files in the "),s("code",[e._v("/serverdir/node")]),e._v(" directory.\nThe "),s("code",[e._v("oasis-node")]),e._v(" binary ensures that the files used by the node are as least\nprivileged as possible so that you don't accidentally shoot yourself in the\nfoot while operating a node.")]),e._v(" "),s("p",[e._v("To ensure proper permissions are set, we suggest running the following to\nremove all non-owner read/write/execute permissions:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" -R go-r,go-w,go-x /serverdir\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("Just so it's clear, the following permissions are expected by the "),s("code",[e._v("oasis-node")]),e._v("\nbinary:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("700")]),e._v(" for the "),s("code",[e._v("/serverdir/node")]),e._v(" directory")]),e._v(" "),s("li",[s("code",[e._v("700")]),e._v(" for the "),s("code",[e._v("/serverdir/node/entity")]),e._v(" directory")]),e._v(" "),s("li",[s("code",[e._v("600")]),e._v(" for all "),s("code",[e._v("*.pem")]),e._v(" files")])])]),e._v(" "),s("h3",{attrs:{id:"starting-the-oasis-node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#starting-the-oasis-node"}},[e._v("#")]),e._v(" Starting the Oasis Node")]),e._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("In a previous version of docs, we asked you to open port "),s("code",[e._v("42261")]),e._v(" on a running\nDocker container. In some configurations we noticed that this port was being\nexposed to the outside world. This is no longer needed and should be removed\nimmediately. Keeping that port open was a temporary measure and is unsafe\ngenerally. Please close that port to the public and do not bind to it in any\nway.")])]),e._v(" "),s("p",[e._v("You can start the node by running the following command:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node --config /serverdir/etc/config.yml\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("The Oasis node is configured to run in the foreground by default.")]),e._v(" "),s("p",[e._v("We recommend you configure and use it with a process manager like "),s("a",{attrs:{href:"https://github.com/systemd/systemd",target:"_blank",rel:"noopener noreferrer"}},[e._v("systemd"),s("OutboundLink")],1),e._v(" or "),s("a",{attrs:{href:"http://supervisord.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Supervisor"),s("OutboundLink")],1),e._v(".")])]),e._v(" "),s("h3",{attrs:{id:"verifying-the-connection-to-the-network"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#verifying-the-connection-to-the-network"}},[e._v("#")]),e._v(" Verifying the Connection to the Network")]),e._v(" "),s("p",[e._v("As part of the starting the server process, the "),s("code",[e._v("oasis-node")]),e._v(" binary will, by\ndefault, setup an internal unix socket in the "),s("code",[e._v("datadir")]),e._v(" of the Node. This socket\ncan be used to communicate to the node and query details about the network.")]),e._v(" "),s("p",[e._v("Run the following command:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node registry entity list -a unix:/serverdir/node/internal.sock\n")])])]),s("p",[e._v("If this command fails, you'll receive a non-zero exit code and there's a high\nlikelihood that you are not connected to the network. However, if it does work\nproperly it should respond with output like the following but with potentially\nmany more values:")]),e._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("2317a8eef10e470434411aebac8f1a8c0f1c6a0d35ff53921f8bc70588bb66b2\n8e3873f84f7f2250eb456dc598dc56b812f561137fe41c383128e6c14e0e2e74\ncf3b004bd98f3e1eab92e97c5fa6cbe4d42a00133c515a2440fefaca514a48ff\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\nffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n")])])]),s("p",[e._v("Once you get to a node that's connected you can move on to the next section as\nyour node is not yet registered as a validator on the Oasis Testnet.")]),e._v(" "),s("h2",{attrs:{id:"signing-up-for-testnet-tokens"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signing-up-for-testnet-tokens"}},[e._v("#")]),e._v(" Signing up for Testnet Tokens")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("This step is not necessary if you submitted a valid entity package for The Quest\nprior to 2019/01/13 @ 00:00 UTC. In this case, your entity will be included in the\nGenesis file.")])]),e._v(" "),s("p",[e._v("In order to participate on the Testnet you'll need to have tokens. You'll use\nthese tokens to register your entity and stake on the network.")]),e._v(" "),s("p",[e._v("To get tokens, you'll need to sign up with "),s("a",{attrs:{href:"https://oasisfoundation.typeform.com/to/dlcekq",target:"_blank",rel:"noopener noreferrer"}},[e._v("this form"),s("OutboundLink")],1),e._v(".\nWhile filling out the form, it will ask for your entity's public key. This is\nthe same as your entity's account ID and can be found in the "),s("code",[e._v("id")]),e._v(" key of the\n"),s("code",[e._v("/localhostdir/entity/entity.json")]),e._v(" JSON file.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("EXAMPLE")]),e._v(" "),s("p",[e._v("In the following "),s("code",[e._v("entity.json")]),e._v(" file, the entity's public key is\n"),s("code",[e._v("TszGIrC1X08czcik0DgAnmGPzjf8pfQ47bgrjpTmbro=")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"TszGIrC1X08czcik0DgAnmGPzjf8pfQ47bgrjpTmbro="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"nodes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"C93lKVNNkca3Oo9m1exiz22NvMBxxYjkyBrt2+eFAds="')]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"registration_time"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1573585972")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"allow_entity_signed_nodes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])]),e._v(" "),s("p",[e._v("After filling out the form, wait for an email notifying you that you've been\nfunded before moving forward. The following sections assume that you have\nalready been funded.")]),e._v(" "),s("h2",{attrs:{id:"staking-and-registering"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#staking-and-registering"}},[e._v("#")]),e._v(" Staking and Registering")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("This step is not necessary if your entity is listed in the Genesis file.")])]),e._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("If you've submitted staking or registry transactions before, your nonce is\nlikely different than the nonce used in the examples. If you're uncertain,\nplease check your account nonce by using "),s("RouterLink",{attrs:{to:"/operators/maintenance/checking-account-nonce.html"}},[e._v("this guide")]),e._v(".")],1)]),e._v(" "),s("p",[e._v("Once you have been funded, you can complete the process of connecting your\nnode to the network by registering both your entity and your node, as\ndescribed below.")]),e._v(" "),s("h3",{attrs:{id:"check-that-your-node-is-synced"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#check-that-your-node-is-synced"}},[e._v("#")]),e._v(" Check that your node is synced")]),e._v(" "),s("p",[e._v("Before you can make any transactions you'll have to make sure that your node is\nsynced. To do so call this command on the server:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node control is-synced "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  -a unix:/serverdir/node/internal.sock "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"You are synced"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("||")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"You are not synced"')]),e._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("oasis-node control is-synced")]),e._v(" command has no output but returns an exit\ncode. The code above adds some sugar to make it a little easier to understand\ndue to the lack of output.")])]),e._v(" "),s("p",[e._v("If you're not synced, you will need to wait until your node has synced before\nyou can move forward.")]),e._v(" "),s("h3",{attrs:{id:"generating-a-staking-escrow-transaction-on-the-localhost"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generating-a-staking-escrow-transaction-on-the-localhost"}},[e._v("#")]),e._v(" Generating a Staking (Escrow) Transaction on the "),s("code",[e._v("localhost")])]),e._v(" "),s("p",[e._v("Your entity's private key should be disconnected from the internet on the\n"),s("code",[e._v("localhost")]),e._v(". Therefore, you need to generate the following transaction on the\n"),s("code",[e._v("localhost")]),e._v(".")]),e._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("The entity's private key is used to authorize transactions on your staking\naccount.")]),e._v(" "),s("p",[e._v("Hence it should never be present on the online "),s("code",[e._v("server")]),e._v(".")])]),e._v(" "),s("p",[e._v("For the Testnet, the current minimum stake required to register an entity and\nregister a node as a validator is 100 tokens.\nSo, we will generate an escrow transaction that escrows 100 tokens on your own\nentity.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v('The Oasis node\'s staking application calls the operation of staking tokens "escrow."')])]),e._v(" "),s("p",[e._v("Before generating the escrow transaction, you need to set the following\nenvironment variables:")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("GENESIS_FILE_PATH")]),e._v(": Path to the Genesis file on the "),s("code",[e._v("localhost")]),e._v(", i.e.\n"),s("code",[e._v("/localhostdir/genesis.json")]),e._v(".")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("ENTITY_DIR_PATH")]),e._v(": Path to entity's artifacts directory on the "),s("code",[e._v("localhost")]),e._v(",\ni.e. "),s("code",[e._v("/localhostdir/entity/")]),e._v(".")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("OUTPUT_TX_FILE_PATH")]),e._v(": Path to the file containing the outputted signed\ntransaction.")]),e._v(" "),s("p",[e._v("For this guide, we will use "),s("code",[e._v("/localhostdir/signed-escrow.tx")]),e._v(".")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("ACCOUNT_ID")]),e._v(". The hex encoding of the entity's public key.")]),e._v(" "),s("p",[e._v("To derive this, you can use the following Python 3 code:")]),e._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" binascii"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" base64\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("def")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("account_id_from_b64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("base64_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[e._v('"""base64_id can be found in entity.json in the `id` field"""')]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" binascii"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("hexlify"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("base64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("b64decode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("base64_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\naccount_id_from_b64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"<YOUR-ENTITY-PUBLIC-KEY>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"deadbeefdeadbeefdeadbeef..."')]),e._v("\n")])])])])]),e._v(" "),s("p",[e._v("Then execute the following command:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node stake account gen_escrow "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --genesis.file "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$GENESIS_FILE_PATH")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer.dir "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ENTITY_DIR_PATH")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --stake.escrow.account "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ACCOUNT_ID")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --stake.amount "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("100000000000")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --transaction.file "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$OUTPUT_TX_FILE_PATH")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --transaction.fee.gas "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1000")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --transaction.fee.amount "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --transaction.nonce "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("The option "),s("code",[e._v("--stake.amount")]),e._v(" looks like a very large number, but this is\nactually just an equivalent to 100 tokens on the Testnet as each unit\nvalue used to track the account balance is 1x10^-9 tokens.")])]),e._v(" "),s("h3",{attrs:{id:"generating-entity-registration-transaction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generating-entity-registration-transaction"}},[e._v("#")]),e._v(" Generating Entity Registration Transaction")]),e._v(" "),s("p",[e._v("After you submit your escrow account, you'll need to register your entity so\nthat your node registers properly. You could do this process "),s("em",[e._v("after")]),e._v(" you\nsubmit the escrow transaction, however, to save steps we prepare everything\nbefore hand.")]),e._v(" "),s("p",[e._v("Before generating the register transaction, you need to set the following\nenvironment variables:")]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("GENESIS_FILE_PATH")]),e._v(": Path to the Genesis file on the "),s("code",[e._v("localhost")]),e._v(", i.e.\n"),s("code",[e._v("/localhostdir/genesis.json")]),e._v(".")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("ENTITY_DIR_PATH")]),e._v(": Path to entity's artifacts directory on the "),s("code",[e._v("localhost")]),e._v(",\ni.e. "),s("code",[e._v("/localhostdir/entity/")]),e._v(".")])]),e._v(" "),s("li",[s("p",[s("code",[e._v("OUTPUT_REGISTER_TX_FILE_PATH")]),e._v(": Path to the file containing the outputted\nsigned transaction.")]),e._v(" "),s("p",[e._v("For this guide, we will use "),s("code",[e._v("/localhostdir/signed-register.tx")]),e._v(".")])])]),e._v(" "),s("p",[e._v("Then execute the following command:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node registry entity gen_register "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --genesis.file "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$GENESIS_FILE_PATH")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer.dir "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$ENTITY_DIR_PATH")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --transaction.file "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$OUTPUT_REGISTER_TX_FILE_PATH")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --transaction.fee.gas "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1000")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --transaction.fee.amount "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --transaction.nonce "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n")])])]),s("h3",{attrs:{id:"submitting-your-transactions-on-the-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submitting-your-transactions-on-the-server"}},[e._v("#")]),e._v(" Submitting Your Transactions on the "),s("code",[e._v("server")])]),e._v(" "),s("p",[e._v("To complete the staking process we need to copy the generated escrow and\nregistry transactions from your offline "),s("code",[e._v("localhost")]),e._v(" to the "),s("code",[e._v("server")]),e._v(" and submit\nthem.")]),e._v(" "),s("p",[e._v("To do so, follow these steps:")]),e._v(" "),s("ol",[s("li",[e._v("Copy the file "),s("code",[e._v("/localhostdir/signed-escrow.tx")]),e._v(" on the "),s("code",[e._v("localhost")]),e._v(" to\n"),s("code",[e._v("/serverdir/signed-escrow.tx")]),e._v(" on the "),s("code",[e._v("server")]),e._v(".")]),e._v(" "),s("li",[e._v("Copy the file "),s("code",[e._v("/localhostdir/signed-register.tx")]),e._v(" on the "),s("code",[e._v("localhost")]),e._v(" to\n"),s("code",[e._v("/serverdir/signed-register.tx")]),e._v(" on the "),s("code",[e._v("server")]),e._v(".")]),e._v(" "),s("li",[e._v("Submit both transactions via "),s("code",[e._v("oasis-node consensus submit_tx")]),e._v(" sub-command:")])]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node consensus submit_tx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --transaction.file /serverdir/signed-escrow.tx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  -a unix:/serverdir/node/internal.sock\noasis-node consensus submit_tx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --transaction.file /serverdir/signed-register.tx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  -a unix:/serverdir/node/internal.sock\n")])])]),s("h3",{attrs:{id:"checking-that-your-node-is-properly-registered"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#checking-that-your-node-is-properly-registered"}},[e._v("#")]),e._v(" Checking that Your Node is Properly Registered")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("We understand these instructions for verification need to improve.")]),e._v(" "),s("p",[e._v("Any assistance is welcome 😉.")])]),e._v(" "),s("p",[e._v("To ensure that your node is properly connected as a validator on the network,\nyou can check if you see the node's identity in the registry's node list.\nUnfortunately, at this time this is a bit of a manual process.")]),e._v(" "),s("h4",{attrs:{id:"getting-the-node-s-consensus-pub-pem-identity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-the-node-s-consensus-pub-pem-identity"}},[e._v("#")]),e._v(" Getting the Node's consensus_pub.pem Identity")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("NODE_CONSENSUS_ID")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" /serverdir/node/consensus_pub.pem "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-----BEGIN ED25519 PUBLIC KEY-----"')]),e._v(" -v "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"-----END ED25519 PUBLIC KEY-----"')]),e._v(" -v"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('"')]),e._v("\n")])])]),s("p",[e._v("You can view this by running")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$NODE_CONSENSUS_ID")]),e._v("\n")])])]),s("p",[e._v("This will look like:")]),e._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("s+vZ71qeZnlq0HmQSDBiWn2OKcy3fXOuPMu76/5GkUI=\n")])])]),s("p",[e._v("You should search the registry's node list for this ID")]),e._v(" "),s("h4",{attrs:{id:"searching-for-the-node-s-identity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#searching-for-the-node-s-identity"}},[e._v("#")]),e._v(" Searching for the Node's Identity")]),e._v(" "),s("p",[e._v("To check if the node is properly registered, run the following command:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node registry node list -v -a unix:/serverdir/node/internal.sock "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$NODE_CONSENSUS_ID")]),e._v("\n")])])]),s("p",[e._v("If "),s("code",[e._v("grep")]),e._v(" found your ID, then you're properly connected!")]),e._v(" "),s("h2",{attrs:{id:"you-re-a-validator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#you-re-a-validator"}},[e._v("#")]),e._v(" You're a Validator!")]),e._v(" "),s("p",[e._v("If you've made it this far you've properly connected your node to the network\nand you're now a validator on the Public Testnet.")])])}),[],!1,null,null,null);t.default=a.exports}}]);
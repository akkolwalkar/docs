(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{262:function(e,t,s){"use strict";s.r(t);var a=s(28),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"ledger-support"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ledger-support"}},[e._v("#")]),e._v(" Ledger Support")]),e._v(" "),s("p",[e._v("Ledger is one of the HSM platforms that Oasis supports for Mainnet Launch.")]),e._v(" "),s("h2",{attrs:{id:"prerequisites"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),s("p",[e._v("Before following this guide, make sure you've followed the "),s("RouterLink",{attrs:{to:"/hsm/prerequisites.html"}},[e._v("Prerequisites\nGuide")]),e._v(" to install the "),s("code",[e._v("oasis-node")]),e._v(" binary.")],1),e._v(" "),s("h2",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),s("p",[e._v("To use with the Ledger App, install the Ledger application from\nthe Ledger Live Manager. You will have to set developer mode to 'on' in order\nto find it.")]),e._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),s("p",[e._v("The Oasis Ledger App will not be available for download until after it has been\napproved be Ledger.")])]),e._v(" "),s("p",[e._v("Once installed, the application will use the generated mnemonic stored on the\ndevice to generate the keys.")]),e._v(" "),s("h2",{attrs:{id:"interacting-with-ledger-app"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#interacting-with-ledger-app"}},[e._v("#")]),e._v(" Interacting with Ledger App")]),e._v(" "),s("p",[e._v("To interact with the Ledger App, use the "),s("code",[e._v("oasis-node")]),e._v(" binary like so:")]),e._v(" "),s("p",[e._v("To identify your device, unlock your device and make sure that you have the\nOasis App open. Run the following command to identify your device by generated\naddress:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node signer ledger list_devices\n")])])]),s("p",[e._v("If your device is properly connected, you should see an output like so:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("==")]),e._v(" Device found\nOasis App Version "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" 302e31322e33\nOasis App Address "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" oasis19hpt4y2reqwyfqcd53asjchdqf468chr673y6jn07xjp36w32jlscf0me\n")])])]),s("p",[e._v("From now on, we will use the "),s("code",[e._v("Oasis App Address")]),e._v(" to identify the Ledger device\nwe want to use for signing.")]),e._v(" "),s("h2",{attrs:{id:"exporting-the-public-key-to-entity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exporting-the-public-key-to-entity"}},[e._v("#")]),e._v(" Exporting the Public Key to Entity")]),e._v(" "),s("p",[e._v("Before we can sign anything, we need to export the public key from the device\nand using it to generate an entity. This will be later used as another check to\nensure that you are signing with the correct key. Using the address we retrieved\nfrom the previous section, run the following:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node signer "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer ledger "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer.dir /path/to/entity "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer.ledger.address oasis19hpt4y2reqwyfqcd53asjchdqf468chr673y6jn07xjp36w32jlscf0me "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer.ledger.index "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n")])])]),s("p",[e._v("This will create an "),s("code",[e._v("entity.json")]),e._v(" file in "),s("code",[e._v("/path/to/entity")]),e._v(" that contains the\npublic key generated on the device associated with "),s("code",[e._v("--signer.ledger.address")]),e._v(",\nderived from a path with an account index of "),s("code",[e._v("--signer.ledger.index")]),e._v(". The\n"),s("code",[e._v("--signer ledger")]),e._v(" flag is important here as it specifies use of a Ledger\nbackend.")]),e._v(" "),s("p",[e._v("This command must be run anytime a new account index is to be used, with a\nnew "),s("code",[e._v("/path/to/entity")]),e._v(" provided.")]),e._v(" "),s("h2",{attrs:{id:"signing-transactions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signing-transactions"}},[e._v("#")]),e._v(" Signing Transactions")]),e._v(" "),s("p",[e._v("To sign transactions with the Ledger App, run the "),s("code",[e._v("oasis-node stake account gen_<transaction_type>")]),e._v(" command, and specify the "),s("code",[e._v("--signer ledger")]),e._v(" flag.\nFor example:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("oasis-node stake account gen_burn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer.dir /path/to/entity "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer ledger "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer.ledger.address oasis19hpt4y2reqwyfqcd53asjchdqf468chr673y6jn07xjp36w32jlscf0me "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --signer.ledger.index "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --genesis.file "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$GENESIS_PATH")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --transaction.fee.amount "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --transaction.fee.gas "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1000")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --transaction.file burn.tx\n")])])]),s("p",[e._v("The "),s("code",[e._v("--signer.ledger.address")]),e._v(" and "),s("code",[e._v("--signer.ledger.index")]),e._v(" flags should match\nthose provided to the command in the previous section. If the public key of\nthe entity in "),s("code",[e._v("/path/to/entity")]),e._v(" does not match that derived by the Ledger\ndevice, the command will fail.")]),e._v(" "),s("p",[e._v("The transaction fields need to be confirmed the Ledger device before signing.")])])}),[],!1,null,null,null);t.default=n.exports}}]);